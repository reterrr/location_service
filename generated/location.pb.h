// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: location.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_location_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_location_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_location_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_location_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_location_2eproto;
class GetLocationRequest;
struct GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
struct GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetLocationsRequest;
struct GetLocationsRequestDefaultTypeInternal;
extern GetLocationsRequestDefaultTypeInternal _GetLocationsRequest_default_instance_;
class Location;
struct LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class LocationsResponse;
struct LocationsResponseDefaultTypeInternal;
extern LocationsResponseDefaultTypeInternal _LocationsResponse_default_instance_;
class SearchLocationRequest;
struct SearchLocationRequestDefaultTypeInternal;
extern SearchLocationRequestDefaultTypeInternal _SearchLocationRequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SearchLocationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SearchLocationRequest) */ {
 public:
  inline SearchLocationRequest() : SearchLocationRequest(nullptr) {}
  ~SearchLocationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SearchLocationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SearchLocationRequest(const SearchLocationRequest& from) : SearchLocationRequest(nullptr, from) {}
  inline SearchLocationRequest(SearchLocationRequest&& from) noexcept
      : SearchLocationRequest(nullptr, std::move(from)) {}
  inline SearchLocationRequest& operator=(const SearchLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchLocationRequest& operator=(SearchLocationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchLocationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SearchLocationRequest* internal_default_instance() {
    return reinterpret_cast<const SearchLocationRequest*>(
        &_SearchLocationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SearchLocationRequest& a, SearchLocationRequest& b) { a.Swap(&b); }
  inline void Swap(SearchLocationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchLocationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchLocationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SearchLocationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchLocationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SearchLocationRequest& from) { SearchLocationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SearchLocationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SearchLocationRequest"; }

 protected:
  explicit SearchLocationRequest(::google::protobuf::Arena* arena);
  SearchLocationRequest(::google::protobuf::Arena* arena, const SearchLocationRequest& from);
  SearchLocationRequest(::google::protobuf::Arena* arena, SearchLocationRequest&& from) noexcept
      : SearchLocationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternNameFieldNumber = 1,
    kPatternCountryFieldNumber = 2,
    kPatternLongitudeFieldNumber = 3,
    kPatternLatitudeFieldNumber = 4,
  };
  // string pattern_name = 1;
  void clear_pattern_name() ;
  const std::string& pattern_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pattern_name(Arg_&& arg, Args_... args);
  std::string* mutable_pattern_name();
  PROTOBUF_NODISCARD std::string* release_pattern_name();
  void set_allocated_pattern_name(std::string* value);

  private:
  const std::string& _internal_pattern_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_name(
      const std::string& value);
  std::string* _internal_mutable_pattern_name();

  public:
  // string pattern_country = 2;
  void clear_pattern_country() ;
  const std::string& pattern_country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pattern_country(Arg_&& arg, Args_... args);
  std::string* mutable_pattern_country();
  PROTOBUF_NODISCARD std::string* release_pattern_country();
  void set_allocated_pattern_country(std::string* value);

  private:
  const std::string& _internal_pattern_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_country(
      const std::string& value);
  std::string* _internal_mutable_pattern_country();

  public:
  // double pattern_longitude = 3;
  void clear_pattern_longitude() ;
  double pattern_longitude() const;
  void set_pattern_longitude(double value);

  private:
  double _internal_pattern_longitude() const;
  void _internal_set_pattern_longitude(double value);

  public:
  // double pattern_latitude = 4;
  void clear_pattern_latitude() ;
  double pattern_latitude() const;
  void set_pattern_latitude(double value);

  private:
  double _internal_pattern_latitude() const;
  void _internal_set_pattern_latitude(double value);

  public:
  // @@protoc_insertion_point(class_scope:SearchLocationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SearchLocationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SearchLocationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pattern_name_;
    ::google::protobuf::internal::ArenaStringPtr pattern_country_;
    double pattern_longitude_;
    double pattern_latitude_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_2eproto;
};
// -------------------------------------------------------------------

class Location final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Location) */ {
 public:
  inline Location() : Location(nullptr) {}
  ~Location() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Location(
      ::google::protobuf::internal::ConstantInitialized);

  inline Location(const Location& from) : Location(nullptr, from) {}
  inline Location(Location&& from) noexcept
      : Location(nullptr, std::move(from)) {}
  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  inline Location& operator=(Location&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Location& default_instance() {
    return *internal_default_instance();
  }
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
        &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Location& a, Location& b) { a.Swap(&b); }
  inline void Swap(Location* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Location* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Location* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Location>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Location& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Location& from) { Location::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Location* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Location"; }

 protected:
  explicit Location(::google::protobuf::Arena* arena);
  Location(::google::protobuf::Arena* arena, const Location& from);
  Location(::google::protobuf::Arena* arena, Location&& from) noexcept
      : Location(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kCountryFieldNumber = 3,
    kIdFieldNumber = 1,
    kLongitudeFieldNumber = 4,
    kLatitudeFieldNumber = 5,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string country = 3;
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // double longitude = 4;
  void clear_longitude() ;
  double longitude() const;
  void set_longitude(double value);

  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);

  public:
  // double latitude = 5;
  void clear_latitude() ;
  double latitude() const;
  void set_latitude(double value);

  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);

  public:
  // @@protoc_insertion_point(class_scope:Location)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      28, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Location_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Location& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::uint64_t id_;
    double longitude_;
    double latitude_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_2eproto;
};
// -------------------------------------------------------------------

class GetLocationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetLocationsRequest) */ {
 public:
  inline GetLocationsRequest() : GetLocationsRequest(nullptr) {}
  ~GetLocationsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLocationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLocationsRequest(const GetLocationsRequest& from) : GetLocationsRequest(nullptr, from) {}
  inline GetLocationsRequest(GetLocationsRequest&& from) noexcept
      : GetLocationsRequest(nullptr, std::move(from)) {}
  inline GetLocationsRequest& operator=(const GetLocationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLocationsRequest& operator=(GetLocationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLocationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLocationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetLocationsRequest*>(
        &_GetLocationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetLocationsRequest& a, GetLocationsRequest& b) { a.Swap(&b); }
  inline void Swap(GetLocationsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLocationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLocationsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetLocationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLocationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLocationsRequest& from) { GetLocationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLocationsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetLocationsRequest"; }

 protected:
  explicit GetLocationsRequest(::google::protobuf::Arena* arena);
  GetLocationsRequest(::google::protobuf::Arena* arena, const GetLocationsRequest& from);
  GetLocationsRequest(::google::protobuf::Arena* arena, GetLocationsRequest&& from) noexcept
      : GetLocationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdsFieldNumber = 1,
  };
  // repeated uint64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::uint64_t ids(int index) const;
  void set_ids(int index, ::uint64_t value);
  void add_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_ids();

  public:
  // @@protoc_insertion_point(class_scope:GetLocationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetLocationsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLocationsRequest& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_2eproto;
};
// -------------------------------------------------------------------

class GetLocationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetLocationRequest) */ {
 public:
  inline GetLocationRequest() : GetLocationRequest(nullptr) {}
  ~GetLocationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLocationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLocationRequest(const GetLocationRequest& from) : GetLocationRequest(nullptr, from) {}
  inline GetLocationRequest(GetLocationRequest&& from) noexcept
      : GetLocationRequest(nullptr, std::move(from)) {}
  inline GetLocationRequest& operator=(const GetLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLocationRequest& operator=(GetLocationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLocationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLocationRequest* internal_default_instance() {
    return reinterpret_cast<const GetLocationRequest*>(
        &_GetLocationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetLocationRequest& a, GetLocationRequest& b) { a.Swap(&b); }
  inline void Swap(GetLocationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLocationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLocationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetLocationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLocationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLocationRequest& from) { GetLocationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLocationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetLocationRequest"; }

 protected:
  explicit GetLocationRequest(::google::protobuf::Arena* arena);
  GetLocationRequest(::google::protobuf::Arena* arena, const GetLocationRequest& from);
  GetLocationRequest(::google::protobuf::Arena* arena, GetLocationRequest&& from) noexcept
      : GetLocationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GetLocationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetLocationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLocationRequest& from_msg);
    ::uint32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_2eproto;
};
// -------------------------------------------------------------------

class LocationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:LocationsResponse) */ {
 public:
  inline LocationsResponse() : LocationsResponse(nullptr) {}
  ~LocationsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LocationsResponse(const LocationsResponse& from) : LocationsResponse(nullptr, from) {}
  inline LocationsResponse(LocationsResponse&& from) noexcept
      : LocationsResponse(nullptr, std::move(from)) {}
  inline LocationsResponse& operator=(const LocationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocationsResponse& operator=(LocationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocationsResponse* internal_default_instance() {
    return reinterpret_cast<const LocationsResponse*>(
        &_LocationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LocationsResponse& a, LocationsResponse& b) { a.Swap(&b); }
  inline void Swap(LocationsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocationsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LocationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocationsResponse& from) { LocationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocationsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "LocationsResponse"; }

 protected:
  explicit LocationsResponse(::google::protobuf::Arena* arena);
  LocationsResponse(::google::protobuf::Arena* arena, const LocationsResponse& from);
  LocationsResponse(::google::protobuf::Arena* arena, LocationsResponse&& from) noexcept
      : LocationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocationsFieldNumber = 1,
  };
  // repeated .Location locations = 1;
  int locations_size() const;
  private:
  int _internal_locations_size() const;

  public:
  void clear_locations() ;
  ::Location* mutable_locations(int index);
  ::google::protobuf::RepeatedPtrField<::Location>* mutable_locations();

  private:
  const ::google::protobuf::RepeatedPtrField<::Location>& _internal_locations() const;
  ::google::protobuf::RepeatedPtrField<::Location>* _internal_mutable_locations();
  public:
  const ::Location& locations(int index) const;
  ::Location* add_locations();
  const ::google::protobuf::RepeatedPtrField<::Location>& locations() const;
  // @@protoc_insertion_point(class_scope:LocationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LocationsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LocationsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Location > locations_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_2eproto;
};
// -------------------------------------------------------------------

class GetLocationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetLocationResponse) */ {
 public:
  inline GetLocationResponse() : GetLocationResponse(nullptr) {}
  ~GetLocationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLocationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLocationResponse(const GetLocationResponse& from) : GetLocationResponse(nullptr, from) {}
  inline GetLocationResponse(GetLocationResponse&& from) noexcept
      : GetLocationResponse(nullptr, std::move(from)) {}
  inline GetLocationResponse& operator=(const GetLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLocationResponse& operator=(GetLocationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLocationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLocationResponse* internal_default_instance() {
    return reinterpret_cast<const GetLocationResponse*>(
        &_GetLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetLocationResponse& a, GetLocationResponse& b) { a.Swap(&b); }
  inline void Swap(GetLocationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLocationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLocationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetLocationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLocationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLocationResponse& from) { GetLocationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLocationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetLocationResponse"; }

 protected:
  explicit GetLocationResponse(::google::protobuf::Arena* arena);
  GetLocationResponse(::google::protobuf::Arena* arena, const GetLocationResponse& from);
  GetLocationResponse(::google::protobuf::Arena* arena, GetLocationResponse&& from) noexcept
      : GetLocationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocationFieldNumber = 1,
  };
  // .Location location = 1;
  bool has_location() const;
  void clear_location() ;
  const ::Location& location() const;
  PROTOBUF_NODISCARD ::Location* release_location();
  ::Location* mutable_location();
  void set_allocated_location(::Location* value);
  void unsafe_arena_set_allocated_location(::Location* value);
  ::Location* unsafe_arena_release_location();

  private:
  const ::Location& _internal_location() const;
  ::Location* _internal_mutable_location();

  public:
  // @@protoc_insertion_point(class_scope:GetLocationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetLocationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLocationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Location* location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Location

// uint64 id = 1;
inline void Location::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t Location::id() const {
  // @@protoc_insertion_point(field_get:Location.id)
  return _internal_id();
}
inline void Location::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Location.id)
}
inline ::uint64_t Location::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Location::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void Location::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Location::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Location.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Location::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Location.name)
}
inline std::string* Location::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Location.name)
  return _s;
}
inline const std::string& Location::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Location::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Location::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Location::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Location.name)
  return _impl_.name_.Release();
}
inline void Location::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Location.name)
}

// string country = 3;
inline void Location::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& Location::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Location.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Location::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Location.country)
}
inline std::string* Location::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:Location.country)
  return _s;
}
inline const std::string& Location::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void Location::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(value, GetArena());
}
inline std::string* Location::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* Location::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Location.country)
  return _impl_.country_.Release();
}
inline void Location::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.country_.IsDefault()) {
          _impl_.country_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Location.country)
}

// double longitude = 4;
inline void Location::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
}
inline double Location::longitude() const {
  // @@protoc_insertion_point(field_get:Location.longitude)
  return _internal_longitude();
}
inline void Location::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:Location.longitude)
}
inline double Location::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void Location::_internal_set_longitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// double latitude = 5;
inline void Location::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
}
inline double Location::latitude() const {
  // @@protoc_insertion_point(field_get:Location.latitude)
  return _internal_latitude();
}
inline void Location::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:Location.latitude)
}
inline double Location::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void Location::_internal_set_latitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// -------------------------------------------------------------------

// SearchLocationRequest

// string pattern_name = 1;
inline void SearchLocationRequest::clear_pattern_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_name_.ClearToEmpty();
}
inline const std::string& SearchLocationRequest::pattern_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SearchLocationRequest.pattern_name)
  return _internal_pattern_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SearchLocationRequest::set_pattern_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SearchLocationRequest.pattern_name)
}
inline std::string* SearchLocationRequest::mutable_pattern_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pattern_name();
  // @@protoc_insertion_point(field_mutable:SearchLocationRequest.pattern_name)
  return _s;
}
inline const std::string& SearchLocationRequest::_internal_pattern_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_name_.Get();
}
inline void SearchLocationRequest::_internal_set_pattern_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_name_.Set(value, GetArena());
}
inline std::string* SearchLocationRequest::_internal_mutable_pattern_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pattern_name_.Mutable( GetArena());
}
inline std::string* SearchLocationRequest::release_pattern_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SearchLocationRequest.pattern_name)
  return _impl_.pattern_name_.Release();
}
inline void SearchLocationRequest::set_allocated_pattern_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pattern_name_.IsDefault()) {
          _impl_.pattern_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SearchLocationRequest.pattern_name)
}

// string pattern_country = 2;
inline void SearchLocationRequest::clear_pattern_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_country_.ClearToEmpty();
}
inline const std::string& SearchLocationRequest::pattern_country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SearchLocationRequest.pattern_country)
  return _internal_pattern_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SearchLocationRequest::set_pattern_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SearchLocationRequest.pattern_country)
}
inline std::string* SearchLocationRequest::mutable_pattern_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pattern_country();
  // @@protoc_insertion_point(field_mutable:SearchLocationRequest.pattern_country)
  return _s;
}
inline const std::string& SearchLocationRequest::_internal_pattern_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_country_.Get();
}
inline void SearchLocationRequest::_internal_set_pattern_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_country_.Set(value, GetArena());
}
inline std::string* SearchLocationRequest::_internal_mutable_pattern_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pattern_country_.Mutable( GetArena());
}
inline std::string* SearchLocationRequest::release_pattern_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SearchLocationRequest.pattern_country)
  return _impl_.pattern_country_.Release();
}
inline void SearchLocationRequest::set_allocated_pattern_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_country_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pattern_country_.IsDefault()) {
          _impl_.pattern_country_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SearchLocationRequest.pattern_country)
}

// double pattern_longitude = 3;
inline void SearchLocationRequest::clear_pattern_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_longitude_ = 0;
}
inline double SearchLocationRequest::pattern_longitude() const {
  // @@protoc_insertion_point(field_get:SearchLocationRequest.pattern_longitude)
  return _internal_pattern_longitude();
}
inline void SearchLocationRequest::set_pattern_longitude(double value) {
  _internal_set_pattern_longitude(value);
  // @@protoc_insertion_point(field_set:SearchLocationRequest.pattern_longitude)
}
inline double SearchLocationRequest::_internal_pattern_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_longitude_;
}
inline void SearchLocationRequest::_internal_set_pattern_longitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_longitude_ = value;
}

// double pattern_latitude = 4;
inline void SearchLocationRequest::clear_pattern_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_latitude_ = 0;
}
inline double SearchLocationRequest::pattern_latitude() const {
  // @@protoc_insertion_point(field_get:SearchLocationRequest.pattern_latitude)
  return _internal_pattern_latitude();
}
inline void SearchLocationRequest::set_pattern_latitude(double value) {
  _internal_set_pattern_latitude(value);
  // @@protoc_insertion_point(field_set:SearchLocationRequest.pattern_latitude)
}
inline double SearchLocationRequest::_internal_pattern_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_latitude_;
}
inline void SearchLocationRequest::_internal_set_pattern_latitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_latitude_ = value;
}

// -------------------------------------------------------------------

// GetLocationRequest

// uint32 id = 1;
inline void GetLocationRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t GetLocationRequest::id() const {
  // @@protoc_insertion_point(field_get:GetLocationRequest.id)
  return _internal_id();
}
inline void GetLocationRequest::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:GetLocationRequest.id)
}
inline ::uint32_t GetLocationRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetLocationRequest::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetLocationResponse

// .Location location = 1;
inline bool GetLocationResponse::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline void GetLocationResponse::clear_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Location& GetLocationResponse::_internal_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Location* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::Location&>(::_Location_default_instance_);
}
inline const ::Location& GetLocationResponse::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetLocationResponse.location)
  return _internal_location();
}
inline void GetLocationResponse::unsafe_arena_set_allocated_location(::Location* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::Location*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GetLocationResponse.location)
}
inline ::Location* GetLocationResponse::release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Location* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Location* GetLocationResponse::unsafe_arena_release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GetLocationResponse.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Location* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::Location* GetLocationResponse::_internal_mutable_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Location>(GetArena());
    _impl_.location_ = reinterpret_cast<::Location*>(p);
  }
  return _impl_.location_;
}
inline ::Location* GetLocationResponse::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Location* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:GetLocationResponse.location)
  return _msg;
}
inline void GetLocationResponse::set_allocated_location(::Location* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::Location*>(value);
  // @@protoc_insertion_point(field_set_allocated:GetLocationResponse.location)
}

// -------------------------------------------------------------------

// GetLocationsRequest

// repeated uint64 ids = 1;
inline int GetLocationsRequest::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int GetLocationsRequest::ids_size() const {
  return _internal_ids_size();
}
inline void GetLocationsRequest::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline ::uint64_t GetLocationsRequest::ids(int index) const {
  // @@protoc_insertion_point(field_get:GetLocationsRequest.ids)
  return _internal_ids().Get(index);
}
inline void GetLocationsRequest::set_ids(int index, ::uint64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:GetLocationsRequest.ids)
}
inline void GetLocationsRequest::add_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:GetLocationsRequest.ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& GetLocationsRequest::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GetLocationsRequest.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* GetLocationsRequest::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GetLocationsRequest.ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
GetLocationsRequest::_internal_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* GetLocationsRequest::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// -------------------------------------------------------------------

// LocationsResponse

// repeated .Location locations = 1;
inline int LocationsResponse::_internal_locations_size() const {
  return _internal_locations().size();
}
inline int LocationsResponse::locations_size() const {
  return _internal_locations_size();
}
inline void LocationsResponse::clear_locations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locations_.Clear();
}
inline ::Location* LocationsResponse::mutable_locations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:LocationsResponse.locations)
  return _internal_mutable_locations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Location>* LocationsResponse::mutable_locations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:LocationsResponse.locations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_locations();
}
inline const ::Location& LocationsResponse::locations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:LocationsResponse.locations)
  return _internal_locations().Get(index);
}
inline ::Location* LocationsResponse::add_locations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Location* _add = _internal_mutable_locations()->Add();
  // @@protoc_insertion_point(field_add:LocationsResponse.locations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Location>& LocationsResponse::locations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:LocationsResponse.locations)
  return _internal_locations();
}
inline const ::google::protobuf::RepeatedPtrField<::Location>&
LocationsResponse::_internal_locations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locations_;
}
inline ::google::protobuf::RepeatedPtrField<::Location>*
LocationsResponse::_internal_mutable_locations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.locations_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_location_2eproto_2epb_2eh
